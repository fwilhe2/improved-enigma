name: CI
on:
  push:
  workflow_dispatch:
  schedule:
    - cron: "1 1 * * 1"
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04, windows-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: fwilhe2/setup-kotlin@main
        with:
          install-native: true
          version: 1.9.20-RC2
      - run: kotlinc foo.kt -include-runtime -d hello.jar; java -jar hello.jar

      - run: kotlinc-native foo.kt
      - run: ./program.exe
        if: ${{ matrix.os == 'windows-latest' }}
      - run: ./program.kexe
        if: ${{ matrix.os != 'windows-latest' }}
      - run: kotlin foo.main.kts

      - uses: fwilhe2/setup-kotlin@main
        name: Do stuff with Kotlin scripting
        with:
          script: |
            #!/usr/bin/env kotlin
            @file:Import("common.main.kts")

            withGroup("debug"){
              println(System.getenv("GITHUB_ENV"))
            }

            println("abc")

            println("Using Kotlin " + getInput("version"))

            exportVariable("action_state", "yellow")
            exportVariable("abc", "xyz")
            exportVariable("myvar", "asasdfsdf")
      - run: echo $action_state
        shell: bash
      - run: echo $abc
        shell: bash
      - run: echo $myvar
        shell: bash
      - uses: fwilhe2/setup-kotlin@main
        name: Read variable with Kotlin scripting
        with:
          script: |
            #!/usr/bin/env kotlin
            println(System.getenv("myvar"))
            if (System.getenv("myvar") != "asasdfsdf") {
              throw RuntimeException("could not get env var")
            }
